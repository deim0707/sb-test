{"version":3,"sources":["Components/ProjectsList/ProjectItem/ProjectItem.module.scss","Components/ProjectDetails/FormDetailsProject/FormDetailsProject.module.scss","Components/ProjectDetails/FactsAboutWorks/FactsAboutWorks.module.scss","Components/ProjectsList/Progress/Progress.module.scss","Components/ProjectsList/Projects/Projects.module.scss","Components/ProjectDetails/HeaderDetails/HeaderDetails.module.scss","img/trash.svg","Components/ProjectDetails/Input/Input.module.scss","Components/ProjectDetails/SelectInput/SelectInput.module.scss","Components/ProjectDetails/TitleProjectDetails/TitleProjectDetails.module.scss","Components/ProjectDetails/Details/Details.module.scss","Components/App/App.module.scss","Components/ProjectsList/Progress/Progress.tsx","Components/ProjectsList/ProjectItem/ProjectItem.tsx","Components/ProjectsList/Projects/Projects.tsx","Components/ProjectDetails/HeaderDetails/HeaderDetails.tsx","helpers.ts","Components/ProjectDetails/FactsAboutWorks/FactsAboutWorks.tsx","Store/actions.ts","Store/types.ts","Components/ProjectDetails/Input/Input.tsx","Components/ProjectDetails/SelectInput/SelectInput.tsx","Components/ProjectDetails/FormDetailsProject/FormDetailsProject.tsx","Components/ProjectDetails/TitleProjectDetails/TitleProjectDetails.tsx","Components/ProjectDetails/Details/Details.tsx","Components/App/App.tsx","Store/initialState.ts","Store/reducer.ts","Store/store.ts","index.tsx"],"names":["module","exports","Progress","progress","colorOfProgress","type","ProgressBar","className","style","progressBar","variant","now","key","label","ProjectItem","project","projectItem","Row","Col","lg","sm","description","md","titleDescriptionWrapper","to","id","title","buttonWrapper","Projects","projects","useSelector","state","map","HeaderDetails","nextPage","length","prewPage","history","useHistory","changeProjectOnKeyDown","e","push","useEffect","document","addEventListener","removeEventListener","ButtonGroup","aria-label","headerDetails","findItemInState","Number","findIndex","item","FactsAboutWorks","dispatch","useDispatch","currentProject","factsAboutWork","facts","Table","striped","bordered","responsive","idx","qt","price","dateNumber","date","Date","year","getFullYear","month","getMonth","day","getDate","returnDateString","status","src","trash","alt","delete","onClick","idProject","idItem","Input","onChange","value","placeholder","input","Form","Label","htmlFor","Control","target","SelectInput","valueProgress","inline","selectInput","as","custom","FormDetailsProject","useState","setTitle","quantity","setQuantity","setPrice","finishDate","setFinishDate","setStatus","isButtonDisabled","setIsButtonDisabled","details","longLabel","Button","disabled","preventDefault","data","payload","addFactAboutWork","sendDataToStore","TitleProjectDetails","name","changeProgressStatus","Details","idFromUrl","useParams","lengthFactsArrayCurrentProject","detailsWrapper","App","Container","app","path","exact","children","component","initialState","changeOneItem","changes","arrayWithFacts","reducerProjects","action","filter","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e16efa19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectItem\":\"ProjectItem_projectItem__1h8Fi\",\"description\":\"ProjectItem_description__2_W6g\",\"buttonWrapper\":\"ProjectItem_buttonWrapper__MPo52\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"FormDetailsProject_details__3G1pL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"facts\":\"FactsAboutWorks_facts__2p2UO\",\"delete\":\"FactsAboutWorks_delete__190U6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBar\":\"Progress_progressBar__109bB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects\":\"Projects_projects__qtb5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerDetails\":\"HeaderDetails_headerDetails__124ia\"};","module.exports = __webpack_public_path__ + \"static/media/trash.47563a4a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3MQGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectInput\":\"SelectInput_selectInput__3mvs0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"TitleProjectDetails_name__3p10a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsWrapper\":\"Details_detailsWrapper__2y4AV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2u_LQ\"};","import React from 'react';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport style from './Progress.module.scss';\r\n\r\n\r\ninterface Props {\r\n    progress: string\r\n}\r\n\r\nconst Progress: React.FC<Props> = ({progress}) => {\r\n\r\n    const colorOfProgress = (type:string) => {\r\n        if(progress === 'planning' && type === 'planning') return 'info';\r\n        else if(progress === 'design' && type === 'design') return 'info';\r\n        else if(progress === 'implementation' && type === 'implementation') return 'primary';\r\n        else if(progress === 'balance' && type === 'balance') return 'success';\r\n        else if(progress === 'closed' && type === 'closed') return 'success';\r\n        else return 'secondary'\r\n    };\r\n\r\n    return (\r\n        <ProgressBar className={style.progressBar}>\r\n            <ProgressBar\r\n                variant={colorOfProgress('planning')}\r\n                now={20}\r\n                key={1}\r\n                label={'Планирование'}/>\r\n            <ProgressBar\r\n                variant={colorOfProgress('design')}\r\n                now={20}\r\n                key={2}\r\n                label={'Проектирование'}/>\r\n            <ProgressBar\r\n                variant={colorOfProgress('implementation')}\r\n                now={20}\r\n                key={3}\r\n                label={'Реализация'}/>\r\n            <ProgressBar\r\n                variant={colorOfProgress('balance')}\r\n                now={20}\r\n                key={4}\r\n                label={'Постановка на баланс'}/>\r\n            <ProgressBar\r\n                variant={colorOfProgress('closed')}\r\n                now={20}\r\n                key={5}\r\n                label={'Закрыт'}/>\r\n        </ProgressBar>\r\n    )\r\n}\r\n\r\nexport default Progress;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ProjectItemType} from '../../../Store/types';\r\nimport Progress from \"../Progress/Progress\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport style from './ProjectItem.module.scss'\r\n\r\ninterface Props {\r\n    project: ProjectItemType\r\n}\r\n\r\nconst ProjectItem: React.FC<Props> = ({project}) => {\r\n\r\n    return (\r\n        <section className={style.projectItem}>\r\n            <Row>\r\n                <Col lg={12} sm={12}>\r\n                    <Progress progress={project.progress}/>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className={style.description}>\r\n                <Col lg={9} md={9} sm={12} className={style.titleDescriptionWrapper}>\r\n                    <div>\r\n                        <h3><Link to={`/projects/${project.id}`}>{project.title}</Link></h3>\r\n                        <p>{project.description}</p>\r\n                    </div>\r\n                </Col>\r\n                <Col lg={3} md={3} sm={12} className={style.buttonWrapper}>\r\n                    <Link to={`/projects/${project.id}`} className={'btn btn-outline-dark'}>Подробности</Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProjectItem;\r\n","import React from \"react\";\r\nimport ProjectItem from \"../ProjectItem/ProjectItem\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ProjectItemType} from \"../../../Store/types\";\r\nimport style from './Projects.module.scss'\r\n\r\n\r\nconst Projects: React.FC = () => {\r\n\r\n    const projects: ProjectItemType[] = useSelector((state: ProjectItemType[]) => state)\r\n\r\n    return (\r\n        <div className={style.projects}>\r\n            {projects.map((project: ProjectItemType): JSX.Element => <ProjectItem key={project.id} project={project}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;\r\n","import React, {useEffect} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ProjectItemType} from \"../../../Store/types\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport style from './HeaderDetails.module.scss'\r\n\r\n\r\ninterface Props {\r\n    id: number\r\n}\r\n\r\nconst HeaderDetails: React.FC<Props> = ({id}) => {\r\n\r\n    const projects = useSelector((state: ProjectItemType[]) => state);\r\n\r\n    const nextPage = (): string => {\r\n        if (id < projects.length) return `/projects/${id + 1}`\r\n        else return `/projects/${projects[0].id}`\r\n    }\r\n\r\n    const prewPage = (): string => {\r\n        if (id > 1) return `/projects/${id - 1}`\r\n        else return `/projects/${projects[projects.length - 1].id}`\r\n    }\r\n\r\n\r\n    const history = useHistory();\r\n    const changeProjectOnKeyDown = (e: KeyboardEvent) => {\r\n        if (e.key === 'ArrowRight') history.push(nextPage())\r\n        if (e.key === 'ArrowLeft') history.push(prewPage())\r\n        if (e.key === 'ArrowUp') history.push('/')\r\n\r\n    }\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', changeProjectOnKeyDown)\r\n        return () => {\r\n            document.removeEventListener('keydown', changeProjectOnKeyDown)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ButtonGroup aria-label=\"Basic example\" className={style.headerDetails}>\r\n            <Link to={'/'} className={'btn btn-outline-primary'}>На главную</Link>\r\n            <Link to={prewPage()} className={'btn btn-outline-primary'}>Назад</Link>\r\n            <Link to={nextPage()} className={'btn btn-outline-primary'}>Вперёд</Link>\r\n        </ButtonGroup>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderDetails;\r\n","import {ProjectItemType} from \"./Store/types\";\r\n\r\nexport const findItemInState = (state: ProjectItemType[], id: number): number => {\r\n    return Number(state.findIndex((item: ProjectItemType) => item.id === Number(id)));\r\n}\r\n","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {ProjectItemType, factAboutWork} from \"../../../Store/types\";\r\nimport {deleteFactAboutWork} from \"../../../Store/actions\";\r\nimport {findItemInState} from \"../../../helpers\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport trash from '../../../img/trash.svg'\r\nimport style from \"./FactsAboutWorks.module.scss\";\r\n\r\n\r\ninterface Props {\r\n    id: number\r\n}\r\n\r\nconst FactsAboutWorks: React.FC<Props> = ({id}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const state = useSelector((state: ProjectItemType[]) => state);\r\n    const currentIdx = findItemInState(state, id);\r\n    const currentProject = state[currentIdx].factsAboutWork;\r\n\r\n    const returnDateString = (dateNumber: number): string => {\r\n        const date = new Date(dateNumber)\r\n        const year = date.getFullYear()\r\n        const month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\r\n        const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\r\n\r\n        return `${day}.${month}.${year}`\r\n    }\r\n\r\n    const returnNameStatus = (status: string): string => {\r\n        if (status === 'planning') return 'Планирование'\r\n        if (status === 'design') return 'Проектирование'\r\n        if (status === 'implementation') return 'Реализация'\r\n        if (status === 'balance') return 'Постановка на баланс'\r\n        if (status === 'closed') return 'Закрыт'\r\n        else return ''\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={style.facts}>\r\n            <Table striped bordered responsive className={'table-responsive responsive'}>\r\n                <thead>\r\n                <tr>\r\n                    <td>№</td>\r\n                    <td>Заголовок</td>\r\n                    <td>Колличество</td>\r\n                    <td>Цена</td>\r\n                    <td>Дедлайн</td>\r\n                    <td>Статус</td>\r\n                    <td/>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    currentProject.map((item: factAboutWork, idx: number): JSX.Element => {\r\n                        return (\r\n                            <tr key={`pr${id}fact${idx}`}>\r\n                                <td>{idx + 1}</td>\r\n                                <td>{item.title}</td>\r\n                                <td>{item.qt}</td>\r\n                                <td>{item.price}</td>\r\n                                <td>{returnDateString(item.date)}</td>\r\n                                <td>{returnNameStatus(item.status)}</td>\r\n                                <td>\r\n                                    <img\r\n                                        src={trash}\r\n                                        alt=\"delete item\"\r\n                                        className={style.delete}\r\n                                        onClick={() => dispatch(deleteFactAboutWork(id, idx))}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FactsAboutWorks;\r\n","import {\r\n    actionType,\r\n    factAboutWork,\r\n    CHANGE_PROGRESS_STATUS,\r\n    ADD_FACT_ABOUT_WORK,\r\n    DELETE_FACT_ABOUT_WORK\r\n} from \"./types\";\r\n\r\n\r\nexport const changeProgressStatus = (id: number, value: string): actionType => {\r\n    return {\r\n        type: CHANGE_PROGRESS_STATUS,\r\n        id: id,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const addFactAboutWork = (id: number, value: factAboutWork): actionType => {\r\n    return {\r\n        type: ADD_FACT_ABOUT_WORK,\r\n        id: id,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const deleteFactAboutWork = (idProject: number, idItem: number): actionType => {\r\n    return {\r\n        type: DELETE_FACT_ABOUT_WORK,\r\n        idProject: idProject,\r\n        idItem: idItem\r\n    }\r\n}\r\n","export interface factAboutWork {\r\n    title: string,\r\n    qt: number,\r\n    price: number,\r\n    date: number,\r\n    status: string\r\n}\r\n\r\nexport interface ProjectItemType {\r\n    id: number,\r\n    title: string,\r\n    description: string,\r\n    progress: string,\r\n    quantity: number,\r\n    price: number,\r\n    factsAboutWork: factAboutWork[]\r\n}\r\n\r\n\r\nexport const CHANGE_PROGRESS_STATUS = 'CHANGE_PROGRESS_STATUS';\r\ninterface ChangeProgressStatusInterface {\r\n    type: typeof CHANGE_PROGRESS_STATUS,\r\n    id: number,\r\n    payload: string\r\n}\r\n\r\nexport const ADD_FACT_ABOUT_WORK = 'ADD_FACT_ABOUT_WORK';\r\ninterface AddFactAboutWorkInterface {\r\n    type: typeof ADD_FACT_ABOUT_WORK,\r\n    id: number,\r\n    payload: factAboutWork\r\n}\r\n\r\nexport const DELETE_FACT_ABOUT_WORK = 'DELETE_FACT_ABOUT_WORK';\r\ninterface DeleteFactAboutWorkInterface {\r\n    type: typeof DELETE_FACT_ABOUT_WORK,\r\n    idProject: number,\r\n    idItem: number\r\n}\r\n\r\n\r\nexport type actionType =\r\n    ChangeProgressStatusInterface |\r\n    AddFactAboutWorkInterface |\r\n    DeleteFactAboutWorkInterface;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport style from './Input.module.scss'\r\n\r\ninterface Props {\r\n    type: string\r\n    label: string\r\n    value: string | number,\r\n    onChange: Function,\r\n    placeholder?: string,\r\n    className?: string\r\n}\r\n\r\nconst Input: React.FC<Props> = ({\r\n                                    type,\r\n                                    label,\r\n                                    onChange,\r\n                                    value,\r\n                                    placeholder,\r\n                                    className\r\n                                }) => {\r\n\r\n    return (\r\n        <div className={`${style.input} ${className || null}`}>\r\n            <Form.Label htmlFor={`${label}${type}${placeholder}`} className=\"my-1 mr-2\">\r\n                {label}\r\n            </Form.Label>\r\n            <Form.Control\r\n                placeholder={placeholder}\r\n                type={type}\r\n                id={`${label}${type}${placeholder}`}\r\n                value={value}\r\n                onChange={(e) => onChange(e.target.value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport style from './SelectInput.module.scss'\r\n\r\ninterface Props {\r\n    label: string\r\n    valueProgress: string,\r\n    onChange: Function\r\n}\r\n\r\nconst SelectInput: React.FC<Props> = ({valueProgress, label, onChange}) => {\r\n\r\n    return (\r\n        <Form inline className={`${style.selectInput}`}>\r\n            <Form.Label className=\"my-1 mr-2\" htmlFor={`${label}-inlineFormCustomSelectPref`}>\r\n                {label}\r\n            </Form.Label>\r\n            <Form.Control\r\n                as=\"select\"\r\n                className={`my-1 mr-sm-2`}\r\n                id={`${label}-inlineFormCustomSelectPref`}\r\n                value={valueProgress}\r\n                onChange={(e) => onChange(e.target.value)}\r\n                custom\r\n            >\r\n                <option value=\"planning\"> Планирование</option>\r\n                <option value=\"design\"> Проектирование</option>\r\n                <option value=\"implementation\"> Реализация</option>\r\n                <option value=\"balance\"> Постановка баланс</option>\r\n                <option value=\"closed\"> Закрыт</option>\r\n            </Form.Control>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SelectInput;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {factAboutWork} from \"../../../Store/types\";\r\nimport {addFactAboutWork} from \"../../../Store/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Input from \"../Input/Input\";\r\nimport SelectInput from \"../SelectInput/SelectInput\";\r\nimport style from './FormDetailsProject.module.scss'\r\n\r\ninterface Props {\r\n    id: number\r\n}\r\n\r\nconst FormDetailsProject: React.FC<Props> = ({id}) => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [finishDate, setFinishDate] = useState('');\r\n    const [status, setStatus] = useState('planning');\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (title && quantity && price && finishDate) setIsButtonDisabled(false)\r\n    }, [title, quantity, price, finishDate])\r\n\r\n\r\n    const sendDataToStore = (e: React.SyntheticEvent) => {\r\n        e.preventDefault()\r\n        const data: factAboutWork = {\r\n            title: title,\r\n            qt: Number(quantity),\r\n            price: Number(price),\r\n            date: Number(new Date(finishDate)),\r\n            status: status\r\n        }\r\n        dispatch(addFactAboutWork(id, data));\r\n\r\n        setTitle('')\r\n        setQuantity('')\r\n        setPrice('')\r\n        setFinishDate('')\r\n        setStatus('planning')\r\n        setIsButtonDisabled(true)\r\n    }\r\n\r\n    return (\r\n        <div className={style.details}>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Input type={'string'} label={'Факт работы:'} className={style.longLabel} value={title}\r\n                           onChange={setTitle} placeholder={'Введите название работы'}/>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6} md={6} sm={12}>\r\n                    <Input type={'number'} label={'Колличество:'} value={quantity} onChange={setQuantity}\r\n                           placeholder={'Введите колличество'}/>\r\n                </Col>\r\n                <Col lg={6} md={6} sm={12}>\r\n                    <Input type={'number'} label={'Цена:'} value={price} onChange={setPrice}\r\n                           placeholder={'Введите цену'}/>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6} md={6} sm={12}>\r\n                    <Input className={style.longLabel} type={'date'} label={'Крайний срок:'} value={finishDate\r\n                    } onChange={setFinishDate}/>\r\n\r\n                </Col>\r\n                <Col lg={6} md={6} sm={12}>\r\n                    <SelectInput label={'Статус:'} valueProgress={status} onChange={setStatus}/>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Button\r\n                        variant={\"primary\"}\r\n                        disabled={isButtonDisabled}\r\n                        onClick={(e) => sendDataToStore(e)}>\r\n                        Добавить\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FormDetailsProject;\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeProgressStatus} from \"../../../Store/actions\";\r\nimport {ProjectItemType} from \"../../../Store/types\";\r\nimport {findItemInState} from \"../../../helpers\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport SelectInput from \"../SelectInput/SelectInput\";\r\nimport style from \"./TitleProjectDetails.module.scss\";\r\n\r\ninterface Props {\r\n    id: number\r\n}\r\n\r\nconst TitleProjectDetails: React.FC<Props> = ({id}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const currentProject: ProjectItemType = useSelector((state: ProjectItemType[]) => {\r\n        const idxItemInState = findItemInState(state, Number(id));\r\n        return state[idxItemInState];\r\n    })\r\n\r\n    const changeStatus = (value: string) => {\r\n        dispatch(changeProgressStatus(id, value))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.name}>\r\n            <Row>\r\n                <Col><h2>{currentProject.title}</h2></Col>\r\n                <Col> <SelectInput\r\n                    valueProgress={currentProject.progress}\r\n                    label={'Статус проекта:'}\r\n                    onChange={changeStatus}\r\n                /></Col>\r\n            </Row>\r\n            <p>{currentProject.description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleProjectDetails;","import React from \"react\";\r\nimport {useParams} from 'react-router-dom';\r\nimport HeaderDetails from \"../HeaderDetails/HeaderDetails\";\r\nimport FactsAboutWorks from \"../FactsAboutWorks/FactsAboutWorks\";\r\nimport FormDetailsProject from \"../FormDetailsProject/FormDetailsProject\";\r\nimport TitleProjectDetails from \"../TitleProjectDetails/TitleProjectDetails\";\r\nimport {ProjectItemType} from \"../../../Store/types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {findItemInState} from \"../../../helpers\";\r\nimport style from './Details.module.scss';\r\n\r\n\r\nconst Details: React.FC = () => {\r\n\r\n    const {id:idFromUrl} = useParams();\r\n\r\n    const id:number = Number(idFromUrl)\r\n\r\n    const lengthFactsArrayCurrentProject = useSelector((state: ProjectItemType[]) => {\r\n        const idxItemInState = findItemInState(state, Number(id));\r\n        return state[idxItemInState].factsAboutWork.length;\r\n    })\r\n\r\n\r\n    return (\r\n        <div className={style.detailsWrapper}>\r\n\r\n            <HeaderDetails id={id}/>\r\n\r\n            <TitleProjectDetails id={id}/>\r\n\r\n            <FormDetailsProject id={idFromUrl}/>\r\n\r\n            {lengthFactsArrayCurrentProject > 0 && <FactsAboutWorks id={id}/>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Details;\r\n","import React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Projects from \"../ProjectsList/Projects/Projects\";\r\nimport Details from \"../ProjectDetails/Details/Details\";\r\nimport style from './App.module.scss'\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <Router>\r\n            <Container>\r\n                <div className={style.app}>\r\n                    <Switch>\r\n                        <Route path='/projects/:id' exact children={<Details/>}/>\r\n                        <Route path='/' exact component={Projects}/>\r\n                    </Switch>\r\n                </div>\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {ProjectItemType} from \"./types\";\r\n\r\nconst initialState: ProjectItemType[] = [\r\n    {\r\n        id: 1,\r\n        title: 'Офис на Восстания',\r\n        description: 'Новое офисное здание на улице Восстания в Санкт-Петербурге',\r\n        progress: 'planning',\r\n        quantity: 3,\r\n        price: 0,\r\n        factsAboutWork: [\r\n            {\r\n                title: 'Купить красивые обои',\r\n                qt: 2,\r\n                price: 100,\r\n                date: 1597749065097,\r\n                status: 'planning'\r\n            },\r\n            {\r\n                title: 'Отремонтировать комнат',\r\n                qt: 21,\r\n                price: 1000000,\r\n                date: 1597749065097,\r\n                status: 'design'\r\n            },\r\n            {\r\n                title: 'Купить шкаф',\r\n                qt: 2,\r\n                price: 3000,\r\n                date: 1597749065097,\r\n                status: 'design'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Проект 2',\r\n        description: 'Здесь другое описание проекта',\r\n        progress: 'design',\r\n        quantity: 2,\r\n        price: 101,\r\n        factsAboutWork: [\r\n            {\r\n                title: 'Купить обои',\r\n                qt: 2,\r\n                price: 100,\r\n                date: 1597749065097,\r\n                status: 'planning'\r\n            },\r\n            {\r\n                title: 'Отремонтировать комнат',\r\n                qt: 21,\r\n                price: 1000000,\r\n                date: 1597749065097,\r\n                status: 'design'\r\n            },\r\n            {\r\n                title: 'Купить шкаф',\r\n                qt: 2,\r\n                price: 3000,\r\n                date: 1597749065097,\r\n                status: 'design'\r\n            },\r\n        ]\r\n\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Проект 3',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Autem doloribus eaque esse nam natus sed ut. Cum eos et sed.',\r\n        progress: 'implementation',\r\n        quantity: 2,\r\n        price: 101,\r\n        factsAboutWork: [\r\n            {\r\n                title: 'Купить обои',\r\n                qt: 2,\r\n                price: 100,\r\n                date: 1597749065097,\r\n                status: 'planning'\r\n            },\r\n            {\r\n                title: 'Отремонтировать комнат',\r\n                qt: 21,\r\n                price: 1000000,\r\n                date: 1597749065097,\r\n                status: 'design'\r\n            },\r\n            {\r\n                title: 'Купить шкаф',\r\n                qt: 2,\r\n                price: 3000,\r\n                date: 1597749065097,\r\n                status: 'design'\r\n            },\r\n        ]\r\n\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Проект 4',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Autem doloribus eaque esse nam natus sed ut. Cum eos et sed.',\r\n        progress: 'balance',\r\n        quantity: 2,\r\n        price: 101,\r\n        factsAboutWork: [\r\n            {\r\n                title: 'Купить обои',\r\n                qt: 2,\r\n                price: 100,\r\n                date: 1597749065097,\r\n                status: 'planning'\r\n            },\r\n            {\r\n                title: 'Отремонтировать комнат',\r\n                qt: 21,\r\n                price: 1000000,\r\n                date: 1597749065097,\r\n                status: 'design'\r\n            },\r\n            {\r\n                title: 'Купить шкаф',\r\n                qt: 2,\r\n                price: 3000,\r\n                date: 1597749065097,\r\n                status: 'design'\r\n            },\r\n        ]\r\n\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Проект 5',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Autem doloribus eaque esse nam natus sed ut. Cum eos et sed.',\r\n        progress: 'closed',\r\n        quantity: 2,\r\n        price: 101,\r\n        factsAboutWork: [\r\n            {\r\n                title: 'Купить обои',\r\n                qt: 2,\r\n                price: 100,\r\n                date: 1597749065097,\r\n                status: 'planning'\r\n            },\r\n            {\r\n                title: 'Отремонтировать комнат',\r\n                qt: 21,\r\n                price: 1000000,\r\n                date: 1597749065097,\r\n                status: 'design'\r\n            },\r\n            {\r\n                title: 'Купить шкаф',\r\n                qt: 2,\r\n                price: 3000,\r\n                date: 1597749065097,\r\n                status: 'design'\r\n            },\r\n        ]\r\n\r\n    },\r\n]\r\n\r\nexport default initialState;\r\n","import {ProjectItemType, factAboutWork, actionType} from './types'\r\nimport {findItemInState} from \"../helpers\";\r\nimport initialState from \"./initialState\";\r\n\r\n\r\nconst changeOneItem = (state: ProjectItemType[], id: number, changes: any): ProjectItemType[] => {\r\n    return state.map((item: ProjectItemType) => {\r\n        if (item.id === id) return {...item, ...changes}\r\n        else return item\r\n    })\r\n}\r\n\r\nconst arrayWithFacts = (state: ProjectItemType[], id: number): factAboutWork[] => state[findItemInState(state, id)].factsAboutWork\r\n\r\n\r\nconst reducerProjects = (state = initialState, action: actionType): ProjectItemType[] => {\r\n    switch (action.type) {\r\n\r\n        case 'CHANGE_PROGRESS_STATUS':\r\n            return changeOneItem(state, action.id, {progress: action.payload});\r\n\r\n        case 'ADD_FACT_ABOUT_WORK':\r\n            return changeOneItem(state, action.id,\r\n                {factsAboutWork: arrayWithFacts(state, action.id).push(action.payload)}\r\n            );\r\n\r\n        case 'DELETE_FACT_ABOUT_WORK':\r\n            return changeOneItem(state, action.idProject,\r\n                {\r\n                    factsAboutWork: arrayWithFacts(state, action.idProject).filter((item, idx) => idx !== action.idItem)\r\n                }\r\n            );\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducerProjects;\r\n","import {createStore} from \"redux\";\r\nimport reducerProjects from \"./reducer\";\r\n\r\nconst store = createStore(\r\n    reducerProjects\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App/App';\r\nimport {Provider} from 'react-redux/';\r\nimport store from \"./Store/store\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}